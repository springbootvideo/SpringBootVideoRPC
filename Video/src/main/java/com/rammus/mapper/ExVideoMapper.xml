<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rammus.mapper.ExVideoMapper">
	<resultMap id="BaseResultMap" type="com.rammus.model.Video">
		<id column="video_id" property="videoId" jdbcType="INTEGER" />
		<result column="title" property="title" jdbcType="VARCHAR" />
		<result column="detail" property="detail" jdbcType="VARCHAR" />
		<result column="time" property="time" jdbcType="INTEGER" />
		<result column="speaker_id" property="speakerId"
			jdbcType="INTEGER" />
		<result column="course_id" property="courseId"
			jdbcType="INTEGER" />
		<result column="video_url" property="videoUrl"
			jdbcType="VARCHAR" />
		<result column="image_url" property="imageUrl"
			jdbcType="VARCHAR" />
		<result column="play_num" property="playNum" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		video_id, title, detail, time, speaker_id, course_id, video_url, image_url,
		play_num
	</sql>
	<select id="selectById" resultMap="ResultMapSpeaker" parameterType="java.lang.Integer">
		select * from video v left join speaker s on v.speaker_id=s.id
		where video_id = #{videoId,jdbcType=INTEGER}
	</select>


	<select id="getAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from video
	</select>
	<resultMap id="ResultMapSpeaker"
		type="com.rammus.model.ExVideo">
		<id column="video_id" property="videoId" jdbcType="INTEGER" />
		<result column="title" property="title" jdbcType="VARCHAR" />
		<result column="detail" property="detail" jdbcType="VARCHAR" />
		<result column="time" property="time" jdbcType="INTEGER" />
		<result column="speaker_id" property="speakerId"
			jdbcType="INTEGER" />
		<result column="course_id" property="courseId"
			jdbcType="INTEGER" />
		<result column="video_url" property="videoUrl"
			jdbcType="VARCHAR" />
		<result column="image_url" property="imageUrl"
			jdbcType="VARCHAR" />
		<result column="play_num" property="playNum" jdbcType="INTEGER" />
		<association property="speaker" javaType="com.rammus.model.Speaker">
			<id column="id" property="id" jdbcType="INTEGER" />
			<result column="speaker_name" property="speakerName"
				jdbcType="VARCHAR" />
			<result column="speaker_desc" property="speakerDesc"
				jdbcType="VARCHAR" />
			<result column="speaker_job" property="speakerJob"
				jdbcType="VARCHAR" />
			<result column="pic_url" property="picUrl" jdbcType="VARCHAR" />
		</association>
	</resultMap>
	<select id="getListByPage" resultMap="ResultMapSpeaker">
		select * from video v left join speaker s on v.speaker_id=s.id order by video_id desc limit #{begin},#{size}
	</select>

	<delete id="deleteById" parameterType="java.lang.Integer">
		delete from video
		where video_id = #{videoId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.rammus.model.ExVideo">
		insert into video (video_id, title, detail,
		time, speaker_id, course_id,
		video_url, image_url, play_num
		)
		values (#{videoId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR},
		#{detail,jdbcType=VARCHAR},
		#{time,jdbcType=INTEGER}, #{speakerId,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER},
		#{videoUrl,jdbcType=VARCHAR}, #{imageUrl,jdbcType=VARCHAR},
		#{playNum,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective"
		parameterType="com.rammus.model.ExVideo">
		insert into video
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="videoId != null">
				video_id,
			</if>
			<if test="title != null">
				title,
			</if>
			<if test="detail != null">
				detail,
			</if>
			<if test="time != null">
				time,
			</if>
			<if test="speakerId != null">
				speaker_id,
			</if>
			<if test="courseId != null">
				course_id,
			</if>
			<if test="videoUrl != null">
				video_url,
			</if>
			<if test="imageUrl != null">
				image_url,
			</if>
			<if test="playNum != null">
				play_num,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="videoId != null">
				#{videoId,jdbcType=INTEGER},
			</if>
			<if test="title != null">
				#{title,jdbcType=VARCHAR},
			</if>
			<if test="detail != null">
				#{detail,jdbcType=VARCHAR},
			</if>
			<if test="time != null">
				#{time,jdbcType=INTEGER},
			</if>
			<if test="speakerId != null">
				#{speakerId,jdbcType=INTEGER},
			</if>
			<if test="courseId != null">
				#{courseId,jdbcType=INTEGER},
			</if>
			<if test="videoUrl != null">
				#{videoUrl,jdbcType=VARCHAR},
			</if>
			<if test="imageUrl != null">
				#{imageUrl,jdbcType=VARCHAR},
			</if>
			<if test="playNum != null">
				#{playNum,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByIdSelective"
		parameterType="com.rammus.model.ExVideo">
		update video
		<set>
			<if test="title != null">
				title = #{title,jdbcType=VARCHAR},
			</if>
			<if test="detail != null">
				detail = #{detail,jdbcType=VARCHAR},
			</if>
			<if test="time != null">
				time = #{time,jdbcType=INTEGER},
			</if>
			<if test="speakerId != null">
				speaker_id = #{speakerId,jdbcType=INTEGER},
			</if>
			<if test="courseId != null">
				course_id = #{courseId,jdbcType=INTEGER},
			</if>
			<if test="videoUrl != null">
				video_url = #{videoUrl,jdbcType=VARCHAR},
			</if>
			<if test="imageUrl != null">
				image_url = #{imageUrl,jdbcType=VARCHAR},
			</if>
			<if test="playNum != null">
				play_num = #{playNum,jdbcType=INTEGER},
			</if>
		</set>
		where video_id = #{videoId,jdbcType=INTEGER}
	</update>
	<update id="updateById" parameterType="com.rammus.model.ExVideo">
		update video
		set title = #{title,jdbcType=VARCHAR},
		detail = #{detail,jdbcType=VARCHAR},
		time = #{time,jdbcType=INTEGER},
		speaker_id = #{speakerId,jdbcType=INTEGER},
		course_id = #{courseId,jdbcType=INTEGER},
		video_url = #{videoUrl,jdbcType=VARCHAR},
		image_url = #{imageUrl,jdbcType=VARCHAR},
		play_num = #{playNum,jdbcType=INTEGER}
		where video_id = #{videoId,jdbcType=INTEGER}
	</update>
	
	<resultMap type="com.rammus.model.ExVideo" id="videoMap2">
		<id column="video_id" property="videoId" />
		<result column="title" property="title" />
		<result column="detail" property="detail" />
		<result column="time" property="time" />
		<result column="video_url" property="videoUrl" />
		<result column="image_url" property="imageUrl" />
		<result column="play_num" property="playNum" />
		<result column="speaker_id" property="speakerId" />
		<result column="course_id" property="courseId" />
		<association column="speaker_id" property="speaker" select="com.rammus.dao.SpeakerDao.selectById"></association>
		<association column="course_id" property="course" select="com.rammus.dao.CourseDao.selectById"></association>
	</resultMap>
	
	<select id="selectLike" resultMap="videoMap2">

		select * from video

		<trim prefix="where" prefixOverrides="and">
			<if test="factor!=null and factor!=''"> ${subject} like "%"
				#{factor} "%" </if>
			<if test="speakerId!=null and speakerId!=0">and speaker_id = #{speakerId}</if>
			<if test="courseId!=null and courseId!=0">and course_id = #{courseId}</if>
		</trim>
		limit #{page},#{number}

	</select>

	<select id="selectLikeCount" resultType="Integer">
		select count(*) from video
		<trim prefix="where" prefixOverrides="and">
			<if test="factor!=null and factor!=''"> ${subject} like "%"
				#{factor} "%" </if>
			<if test="speakerId!=null and speakerId!=0">and speaker_id = #{speakerId}</if>
			<if test="courseId!=null and courseId!=0">and course_id = #{courseId}</if>
		</trim>
	</select>
</mapper>